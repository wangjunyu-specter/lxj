{"version":3,"sources":["webpack:///./src/app/pipes/datecontent.pipe.ts","webpack:///./src/app/pipes/decodeuri.pipe.ts","webpack:///./src/app/pipes/goodsattr.pipe.ts","webpack:///./src/app/pipes/imgsrc.pipe.ts","webpack:///./src/app/pipes/isgz.pipe.ts","webpack:///./src/app/pipes/isvideo.pipe.ts","webpack:///./src/app/pipes/namesubstr.pipe.ts","webpack:///./src/app/pipes/oldtonow.pipe.ts","webpack:///./src/app/pipes/pipes.module.ts","webpack:///./src/app/pipes/setnum.pipe.ts","webpack:///./src/app/pipes/splitarr.pipe.ts","webpack:///./src/app/pipes/telhide.pipe.ts","webpack:///./src/app/pipes/xccontentsplit.pipe.ts","webpack:///./src/app/pipes/xclistattr.pipe.ts"],"names":[],"mappings":"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","file":"default~pages-allorder-allorder-module~pages-articlecontent-articlecontent-module~pages-browse-recor~74e7fc02.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'datecontent'\n})\nexport class DatecontentPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    console.log(value)\n    return null;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'decodeuri'\n})\nexport class DecodeuriPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (value) {\n      return decodeURIComponent(value);\n    }\n    return null;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'goodsattr'\n})\nexport class GoodsattrPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    console.log(value)\n    value = value.replace(/\\[\\S*\\]/g, '');\n    console.log(value.length)\n    if (value.length > 15) {\n      return value.slice(0, 15);\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { HttpService } from '../services/http.service';\n@Pipe({\n  name: 'imgsrc'\n})\nexport class ImgsrcPipe implements PipeTransform {\n\n  transform(value: string, args?: any): any {\n  // : todo 暂未实现    所有img src pipe\n    if (!value) {\n      return '../../assets/mrtx.jpg';\n    }\n    if (value.startsWith('http') || value.startsWith('data:image') || value.startsWith('file:///') || value.startsWith('cdvfile://')) {\n      return value;\n    } else {\n      return args + value;\n    }\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'isgz'\n})\nexport class IsgzPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    console.log(value)\n    console.log(args)\n    if (!args) {\n      return false;\n    }\n    if (args.includes(value)) {\n      return false;\n    }\n    return true;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'isvideo'\n})\nexport class IsvideoPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return false;\n    }\n    const index = value.lastIndexOf('.');\n    if (index < 0) {\n      return false;\n    }\n    const type = value.substr(index + 1);\n    if (type === 'mp4' || type === 'ogg' || type === 'WebM') {\n      return true;\n    }\n    console.error(type);\n    return false;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'namesubstr'\n})\nexport class NamesubstrPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    console.log(value)\n    if (isNaN(Number(args)) || !value) {\n      return value;\n    } else {\n      if (value.length > args) {\n        return value.substr(0, args) + '...';\n      }\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'oldtonow'\n})\nexport class OldtonowPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    return getTimeUntilNow(value);\n    return null;\n  }\n\n}\nfunction getTimeUntilNow(mss: number) {\n  const days = parseInt((mss / (1000 * 60 * 60 * 24)).toString(), 10);\n  if (days > 0) {\n    return days + '天前';\n  }\n  const hours = parseInt(((mss % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)).toString(), 10);\n  if (hours > 0) {\n    return hours + '小时前';\n  }\n  const minutes = parseInt(((mss % (1000 * 60 * 60)) / (1000 * 60)).toString(), 10);\n  if (minutes > 0) {\n    return minutes + '分钟前';\n  }\n  const seconds = (mss % (1000 * 60)) / 1000;\n  return '刚刚 ';\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DatecontentPipe } from './datecontent.pipe';\nimport { GoodsattrPipe } from './goodsattr.pipe';\nimport { OldtonowPipe } from './oldtonow.pipe';\nimport { IsgzPipe } from './isgz.pipe';\nimport { ImgsrcPipe } from './imgsrc.pipe';\nimport { DecodeuriPipe } from './decodeuri.pipe';\nimport { SetnumPipe } from './setnum.pipe';\nimport { TelhidePipe } from './telhide.pipe';\nimport { IsvideoPipe } from './isvideo.pipe';\nimport { NamesubstrPipe } from './namesubstr.pipe';\nimport { XclistattrPipe } from './xclistattr.pipe';\nimport { XccontentsplitPipe } from './xccontentsplit.pipe';\nimport { SplitarrPipe } from './splitarr.pipe';\n\n// import { YhqtitlePipe } from './yhqtitle.pipe';\n\n@NgModule({\n  declarations: [DatecontentPipe, GoodsattrPipe, OldtonowPipe, IsgzPipe,\n    ImgsrcPipe, DecodeuriPipe, SetnumPipe, TelhidePipe, IsvideoPipe, NamesubstrPipe,\n    XclistattrPipe,\n    XccontentsplitPipe,\n    SplitarrPipe],\n  imports: [\n    CommonModule\n  ],\n  exports: [DatecontentPipe, GoodsattrPipe, OldtonowPipe, IsgzPipe, ImgsrcPipe,\n    DecodeuriPipe, SetnumPipe, TelhidePipe, IsvideoPipe, NamesubstrPipe,\n    XclistattrPipe, XccontentsplitPipe, SplitarrPipe]\n})\nexport class PipesModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'setnum'\n})\nexport class SetnumPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value || isNaN(Number(value))) {\n      return 0;\n    }\n    const num = Number(value);\n    if (num > 10000) {\n      const w = Math.floor(num / 10000);\n      const y = num % 10000;\n      let str = w.toString();\n      if (y > 0) {\n        const q = Math.floor(y / 1000);\n        if (q > 0) {\n          str += '.' + q + '+';\n        }\n      }\n      return str + '万'\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'splitarr'\n})\nexport class SplitarrPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value || typeof value != 'string') {\n      return value;\n    }\n    if (value.includes(' ')) {\n      return value.split(' ');\n    } else if (value.includes(',')) {\n      return value.split(',')\n    } else if (value.includes('|')) {\n      return value.split('|')\n    } else {\n      return value.split('，')\n    }\n    return '';\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'telhide'\n})\nexport class TelhidePipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n    const start = value.substr(0, 3);\n    const end = value.substr(-4);\n    return start + '****' + end;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'xccontentsplit'\n})\nexport class XccontentsplitPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n    value = value.replace(/\\r?\\n|\\r/g, \"\")\n    const arr = value.split(' ');\n    const arr2 = [];\n    arr.map(res => {\n      if (!res) {\n        return false;\n      }\n      res = res.replace(/(\\[\\d*\\])/g, '');\n      arr2.push(res.split(':'))\n    })\n\n    return arr2;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'xclistattr'\n})\nexport class XclistattrPipe implements PipeTransform {\n\n  transform(value: any, args?: any): any {\n    if (!value) {\n      return '';\n    }\n    value = value.replace(/\\r?\\n|\\r/g, \"\")\n    const arr = value.split(' ');\n    const arr2 = [];\n    arr.map(res => {\n      if (!res) {\n        return false;\n      }\n      res = res.replace(/(\\[\\d*\\])/g, '');\n      arr2.push(res)\n    })\n    if (arr2.length > 3 && !args) {\n      arr2.length = 3;\n      arr2.push('...')\n    }\n    return arr2;\n  }\n\n}\n"],"sourceRoot":""}