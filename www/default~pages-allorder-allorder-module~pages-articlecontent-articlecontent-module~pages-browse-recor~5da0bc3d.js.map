{"version":3,"sources":["webpack:///./src/app/services/contactlist.service.ts"],"names":[],"mappings":"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","file":"default~pages-allorder-allorder-module~pages-articlecontent-articlecontent-module~pages-browse-recor~5da0bc3d.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {HttpService} from \"./http.service\";\r\nimport {UserService} from './user.service';\r\n // 联系人数据\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactlistService {\r\n  list: any[];\r\n  activeList: any[]; // 当前选中收货、联系人\r\n  mrid: string; // 默认id\r\n  provinceList: any[]; // 省列表\r\n  isgetdata: boolean;\r\n  constructor(private http: HttpService, private user: UserService) {\r\n    this.activeList = [];\r\n    this.list = [];\r\n    this.provinceList = [];\r\n    this.isgetdata = false;\r\n  }\r\n  getContactlist () {\r\n    if (this.list.length === 0) {\r\n      this.getList();\r\n    }\r\n    return this.list;\r\n  }\r\n  setList(list: any[]) {\r\n    if (list.length === 0) {\r\n      return false;\r\n    }\r\n    this.list.length = 0;\r\n    this.user.getUserp().then(res => {\r\n      console.log(res)\r\n      this.mrid = res.address_id;\r\n      console.log(this.mrid)\r\n      for (let i = 0, j = list.length; i < j; i++) {\r\n        let jj = this.list.length;\r\n        for (let ii = 0; ii < jj; ii++) {\r\n          if (this.list[ii].address_id == list[i].address_id) {\r\n            list.splice(i, 1);\r\n            i--;\r\n            j--;\r\n            break;\r\n          }\r\n        }\r\n        this.list.push(list[i]);\r\n        if (list[i].address_id == this.mrid && this.mrid != '0') {\r\n          this.list[i].active = true;\r\n          this.list[i].mr = 1;\r\n          this.activeList.push(list[i]);\r\n        } else {\r\n          this.list[i].mr = 0;\r\n        }\r\n      }\r\n      if (!this.mrid) {\r\n        this.list[0].mr = 1;\r\n        this.activeList.push(this.list[0]);\r\n        this.list[0].active = true;\r\n      }\r\n    }).catch(err =>{})\r\n\r\n    console.log(this.activeList);\r\n  }\r\n  setPro(list: any) {\r\n    this.provinceList.length = 0;\r\n    this.provinceList.push(...list);\r\n  }\r\n  getPro() {\r\n    return this.provinceList;\r\n  }\r\n  setMr (id) {\r\n    this.http.getData(this.http.setMraddress, {address_id: id}).subscribe(res=>{\r\n      this.setMrfn(id);\r\n    }, error2 => {})\r\n  }\r\n  delete (id) {\r\n    this.http.getData(this.http.deleteaddress, {id}).subscribe(res=>{\r\n      for(let i = 0, j = this.list.length; i < j; i++) {\r\n        console.log(this.list[i])\r\n        if (this.list[i]['address_id'] == id) {\r\n          this.list.splice(i, 1);\r\n        }\r\n        if(res.result) {\r\n          this.setMrfn(res.result);\r\n        }\r\n        for (let i = 0, j = this.activeList.length; i < j; i++) {\r\n          if (this.activeList[i].address_id == id) {\r\n            this.activeList.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    }, error2 => {});\r\n  }\r\n  setMrfn(id) {\r\n    this.mrid = id;\r\n    this.user.setMraddress(id)\r\n    this.list.map(res => {\r\n      if (res.id == id || res.address_id == id) {\r\n        res.mr = 1;\r\n      } else {\r\n        res.mr = 0;\r\n      }\r\n    })\r\n  }\r\n  setData(num: number) {\r\n    if (this.activeList.length === num) {\r\n      return false;\r\n    }\r\n    if (this.list.length > 0) {\r\n      for (let i = 0, j = this.list.length; i < j; i++) {\r\n        this.list[i].active = false;\r\n      }\r\n    }\r\n    if (this.activeList.length > 0) {\r\n      this.activeList.length = 0;\r\n    }\r\n  }\r\n  async getItem(id) {\r\n    if (this.list && this.list.length > 0) {\r\n      for (let i = 0, j = this.list.length; i < j; i++) {\r\n        if (this.list[i].address_id == id) {\r\n          return this.list[i];\r\n        }\r\n      }\r\n    }\r\n    try {\r\n      await this.getList();\r\n      for (let i = 0, j = this.list.length; i < j; i++) {\r\n        if (this.list[i].address_id === id) {\r\n          return this.list[i];\r\n        }\r\n      }\r\n    } catch (e) {\r\n      return {};\r\n    }\r\n    return {};\r\n  }\r\n  edmit(item) {\r\n    console.log(item)\r\n    if (item.defalut == 1) {\r\n      item.mr = 1;\r\n      this.setMrfn(item.address_id);\r\n      for (let i = 0, j = this.activeList.length; i < j; i++) {\r\n        if (this.activeList[i].address_id == item.address_id) {\r\n          this.activeList.splice(i, 1, item);\r\n        } else {\r\n          if (this.activeList[i].mr == 1) {\r\n            this.activeList[i].mr = 0;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (this.activeList.length === 0) {\r\n      this.activeList.push(item);\r\n    }\r\n    let isupdate = false;\r\n    for (let i = 0, j = this.list.length; i < j; i++) {\r\n      if (this.list[i].address_id == item.address_id) {\r\n        this.list.splice(i, 1, item);\r\n        isupdate = true;\r\n      } else {\r\n        if (item.mr == 1) {\r\n          this.list[i].mr = 0;\r\n        }\r\n      }\r\n    }\r\n    if (!isupdate) {\r\n      this.list.push(item);\r\n    }\r\n    console.log(this.list)\r\n  }\r\n  async getActive() {\r\n    if (this.activeList.length === 0) {\r\n      try {\r\n        await this.getList();\r\n      } catch (err) {\r\n        return [];\r\n      }\r\n    }\r\n    return this.activeList;\r\n  }\r\n  setActive(item, num) {\r\n    console.log(item)\r\n    console.log(num)\r\n    let data: any;\r\n    let arr:number[] = [];\r\n    for (let i = 0, j = this.list.length; i < j; i++) {\r\n      if (this.list[i].id === item.id) {\r\n        this.list[i].active = this.list[i].active ? false : true;\r\n\r\n        if (this.list[i].active) {\r\n          arr.push(i);\r\n          if (arr.length > num) {\r\n            this.list[arr[arr.length - 2]].active = false;\r\n          }\r\n        }\r\n        data = this.list[i];\r\n      } else {\r\n        console.log(this.list[i])\r\n        if (arr.length === num && this.list[i].active) {\r\n          this.list[i].active = false;\r\n        } else if (arr.length < num && this.list[i].active) {\r\n          arr.push(i);\r\n        } else {\r\n          this.list[i].active = false;\r\n        }\r\n      }\r\n    }\r\n    if (this.activeList.includes(item)) {\r\n      for (let i = 0, j = this.activeList.length; i < j; i++) {\r\n        if (this.activeList[i].id === item.id) {\r\n          this.activeList.splice(i, 1);\r\n          break;\r\n        }\r\n      }\r\n    } else if (!this.activeList.includes(item) && this.activeList.length == num) {\r\n      this.activeList.splice(this.activeList.length - 1, 1, data);\r\n    } else {\r\n      this.activeList.push(item);\r\n    }\r\n\r\n  }\r\n  async getList() {\r\n    if (this.isgetdata) {\r\n      return false;\r\n    }\r\n    this.isgetdata = true;\r\n    return new Promise((resolve, reject) => {\r\n      this.http.getDataloading(this.http.getaddress).subscribe(res => {\r\n        this.setList(res['data']['consignee_list']);\r\n        this.setPro(res['data']['shop_province_list']);\r\n        this.isgetdata = false;\r\n        resolve(true)\r\n      }, err => {\r\n        console.log(err);\r\n        this.isgetdata = false;\r\n        reject(false);\r\n      });\r\n    })\r\n  }\r\n  remove () {\r\n    this.list.length = 0;\r\n    this.activeList.length = 0;\r\n    this.mrid = '';\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}